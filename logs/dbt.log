2017-03-16 10:37:30,509: Tracking: tracking
2017-03-16 10:37:30,509: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109966c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109966780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109966da0>]}
2017-03-16 10:37:30,708: Compiled 0 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 10:37:30,708: Loading dependency graph file
2017-03-16 10:37:30,793: Connecting to redshift.
2017-03-16 10:37:41,271: Got an error when attempting to open a postgres connection: 'timeout expired
'
2017-03-16 10:37:41,271: ERROR: Could not connect to the target database. Try `dbt debug` for more information.
2017-03-16 10:37:41,272: timeout expired

2017-03-16 10:39:17,512: Tracking: tracking
2017-03-16 10:39:17,512: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ff9c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ff99e8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ff9d68>]}
2017-03-16 10:39:18,379: Compiled 0 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 10:39:18,379: Loading dependency graph file
2017-03-16 10:39:18,413: Connecting to redshift.
2017-03-16 10:39:19,152: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 10:39:19,200: SQL status: CREATE SCHEMA in 0.05 seconds
2017-03-16 10:39:19,202: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 10:39:19,386: SQL status: SELECT in 0.18 seconds
2017-03-16 10:39:19,388: WARNING: Nothing to do. Try checking your model configs and running `dbt compile`
2017-03-16 10:39:19,389: Done. PASS=0 ERROR=0 SKIP=0 TOTAL=0
2017-03-16 10:39:19,391: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1120d3898>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1120d35c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1120d3390>]}
2017-03-16 10:39:19,714: Flushing usage events
2017-03-16 11:01:06,708: Tracking: tracking
2017-03-16 11:01:06,710: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a422c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4226a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a422d30>]}
2017-03-16 11:01:07,865: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:01:07,865: Loading dependency graph file
2017-03-16 11:01:07,925: Connecting to redshift.
2017-03-16 11:01:08,574: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:01:08,605: SQL status: CREATE SCHEMA in 0.03 seconds
2017-03-16 11:01:08,606: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:01:08,704: SQL status: SELECT in 0.10 seconds
2017-03-16 11:01:08,704: Concurrency: 1 threads (target='dev')
2017-03-16 11:01:08,704: Running!
2017-03-16 11:01:08,706: 
2017-03-16 11:01:08,706: 11:01:08 | Running 3 models
2017-03-16 11:01:11,201: 11:01:11 | 1 of 3 START table model dbt_arecalde.shipments_items ............... [RUN]
2017-03-16 11:01:11,202: executing model <CompiledModel shipstation.shipments_items: target/build/shipstation/tables/shipments_items.sql>
2017-03-16 11:01:11,203: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments_items__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
)select 
si.order_id, 
si.shopify_line_item_id,
s.order_number, 
s.shopify_order_number,
sku, 
quantity,
weight_oz,
weight_lbs,
(shipping_cost / total_quantity) * quantity as line_item_shipping_cost
from __dbt__CTE__webhook_shipments_items si
join __dbt__CTE__webhook_shipments s on s.order_id = si.order_id

UNION

select 
si.order_id, 
si.shopify_line_item_id,
si.order_number, 
si.shopify_order_number,
sku, 
quantity,
weight_oz,
weight_lbs,
(shipping_cost / total_quantity) * quantity as line_item_shipping_cost
from __dbt__CTE__file_shipments_items si
join __dbt__CTE__file_shipments s on s.order_number = si.order_number
);

-- Post-model hooks

2017-03-16 11:01:11,259: Error executing target/build/shipstation/tables/shipments_items.sql
column reference "weight_oz" is ambiguous
2017-03-16 11:01:11,259: 11:01:11 | 1 of 3 ERROR creating table model dbt_arecalde.shipments_items ...... [ERROR in 0.06s]
2017-03-16 11:01:11,260: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '01d6e940-c0c2-46d9-8982-5b61e61751d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a55fe48>]}
2017-03-16 11:01:11,406: Error executing target/build/shipstation/tables/shipments_items.sql
column reference "weight_oz" is ambiguous
2017-03-16 11:01:11,406: 11:01:11 | 2 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:01:11,406: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:01:11,406: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
shipment_id,
order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id, 
shipment_id,
s.order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:01:11,444: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:01:11,450: 11:01:11 | 2 of 3 ERROR creating table model dbt_arecalde.shipments ............ [ERROR in 0.04s]
2017-03-16 11:01:11,450: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '01d6e940-c0c2-46d9-8982-5b61e61751d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a55fda0>]}
2017-03-16 11:01:11,599: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:01:11,599: 11:01:11 | 3 of 3 SKIP relation dbt_arecalde.shopify_aggregate.................. [SKIP]
2017-03-16 11:01:11,679: 
2017-03-16 11:01:11,680: 11:01:11 | Finished running 3 models
2017-03-16 11:01:11,680: Done. PASS=0 ERROR=2 SKIP=1 TOTAL=3
2017-03-16 11:01:11,681: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a55f3c8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a55ffd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a55f160>]}
2017-03-16 11:01:11,826: Flushing usage events
2017-03-16 11:02:04,833: Tracking: tracking
2017-03-16 11:02:04,833: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b86c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b869e8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b86d68>]}
2017-03-16 11:02:05,037: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:02:05,037: Loading dependency graph file
2017-03-16 11:02:05,072: Connecting to redshift.
2017-03-16 11:02:05,270: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:02:05,320: SQL status: CREATE SCHEMA in 0.05 seconds
2017-03-16 11:02:05,320: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:02:05,502: SQL status: SELECT in 0.18 seconds
2017-03-16 11:02:05,502: Concurrency: 1 threads (target='dev')
2017-03-16 11:02:05,503: Running!
2017-03-16 11:02:05,504: 
2017-03-16 11:02:05,504: 11:02:05 | Running 3 models
2017-03-16 11:02:06,153: 11:02:06 | 1 of 3 START table model dbt_arecalde.shipments_items ............... [RUN]
2017-03-16 11:02:06,154: executing model <CompiledModel shipstation.shipments_items: target/build/shipstation/tables/shipments_items.sql>
2017-03-16 11:02:06,155: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments_items__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
)select 
si.order_id, 
si.shopify_line_item_id,
s.order_number, 
s.shopify_order_number,
sku, 
quantity,
si.weight_oz,
si.weight_lbs,
(shipping_cost / total_quantity) * quantity as line_item_shipping_cost
from __dbt__CTE__webhook_shipments_items si
join __dbt__CTE__webhook_shipments s on s.order_id = si.order_id

UNION

select 
si.order_id, 
si.shopify_line_item_id,
si.order_number, 
si.shopify_order_number,
sku, 
quantity,
si.weight_oz,
si.weight_lbs,
(shipping_cost / total_quantity) * quantity as line_item_shipping_cost
from __dbt__CTE__file_shipments_items si
join __dbt__CTE__file_shipments s on s.order_number = si.order_number
);

-- Post-model hooks

2017-03-16 11:02:06,326: Error executing target/build/shipstation/tables/shipments_items.sql
column "total_quantity" does not exist in si, s, unnamed_join
2017-03-16 11:02:06,327: 11:02:06 | 1 of 3 ERROR creating table model dbt_arecalde.shipments_items ...... [ERROR in 0.17s]
2017-03-16 11:02:06,327: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57cb0a05-f991-4013-bb23-2cba46a53aec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112cc4cf8>]}
2017-03-16 11:02:06,451: Error executing target/build/shipstation/tables/shipments_items.sql
column "total_quantity" does not exist in si, s, unnamed_join
2017-03-16 11:02:06,451: 11:02:06 | 2 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:02:06,451: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:02:06,451: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
shipment_id,
order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id, 
shipment_id,
s.order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:02:06,521: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:02:06,522: 11:02:06 | 2 of 3 ERROR creating table model dbt_arecalde.shipments ............ [ERROR in 0.07s]
2017-03-16 11:02:06,523: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57cb0a05-f991-4013-bb23-2cba46a53aec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112cc4c88>]}
2017-03-16 11:02:06,692: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:02:06,692: 11:02:06 | 3 of 3 SKIP relation dbt_arecalde.shopify_aggregate.................. [SKIP]
2017-03-16 11:02:06,732: 
2017-03-16 11:02:06,736: 11:02:06 | Finished running 3 models
2017-03-16 11:02:06,736: Done. PASS=0 ERROR=2 SKIP=1 TOTAL=3
2017-03-16 11:02:06,737: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112cc42e8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112cc4e80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112cc4320>]}
2017-03-16 11:02:06,938: Flushing usage events
2017-03-16 11:02:42,049: Tracking: tracking
2017-03-16 11:02:42,049: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112353ba8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112353828>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112353da0>]}
2017-03-16 11:02:42,671: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:02:42,671: Loading dependency graph file
2017-03-16 11:02:42,720: Connecting to redshift.
2017-03-16 11:02:43,411: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:02:43,470: SQL status: CREATE SCHEMA in 0.06 seconds
2017-03-16 11:02:43,470: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:02:43,592: SQL status: SELECT in 0.12 seconds
2017-03-16 11:02:43,593: Concurrency: 1 threads (target='dev')
2017-03-16 11:02:43,593: Running!
2017-03-16 11:02:43,594: 
2017-03-16 11:02:43,595: 11:02:43 | Running 3 models
2017-03-16 11:02:44,457: 11:02:44 | 1 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:02:44,457: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:02:44,459: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
shipment_id,
order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id, 
shipment_id,
s.order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:02:44,557: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:02:44,557: 11:02:44 | 1 of 3 ERROR creating table model dbt_arecalde.shipments ............ [ERROR in 0.10s]
2017-03-16 11:02:44,558: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1f2c60cf-9cb3-494c-82a8-cfd97b026de6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112487518>]}
2017-03-16 11:02:44,745: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:02:44,745: 11:02:44 | 2 of 3 SKIP relation dbt_arecalde.shipments_items.................... [SKIP]
2017-03-16 11:02:44,746: 11:02:44 | 3 of 3 SKIP relation dbt_arecalde.shopify_aggregate.................. [SKIP]
2017-03-16 11:02:44,831: 
2017-03-16 11:02:44,832: 11:02:44 | Finished running 3 models
2017-03-16 11:02:44,832: Done. PASS=0 ERROR=1 SKIP=2 TOTAL=3
2017-03-16 11:02:44,833: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112427668>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124273c8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124270f0>]}
2017-03-16 11:02:44,970: Flushing usage events
2017-03-16 11:03:03,474: Tracking: tracking
2017-03-16 11:03:03,475: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11199ac50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11199a780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11199ada0>]}
2017-03-16 11:03:04,678: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:03:04,678: Loading dependency graph file
2017-03-16 11:03:04,711: Connecting to redshift.
2017-03-16 11:03:05,424: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:03:05,632: SQL status: CREATE SCHEMA in 0.21 seconds
2017-03-16 11:03:05,633: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:03:05,989: SQL status: SELECT in 0.36 seconds
2017-03-16 11:03:05,990: Concurrency: 1 threads (target='dev')
2017-03-16 11:03:05,990: Running!
2017-03-16 11:03:05,991: 
2017-03-16 11:03:05,991: 11:03:05 | Running 3 models
2017-03-16 11:03:07,196: 11:03:07 | 1 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:03:07,196: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:03:07,198: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
-- shipment_id,
-- order_number, 
-- shopify_order_number,
-- carrier,
-- service,
-- ship_date,
-- shipping_cost,
-- ship_to_country,
-- ship_to_city,
-- ship_to_state,
-- weight_oz,
-- weight_lbs,
-- total_quantity,
-- total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id, 
-- shipment_id,
-- s.order_number, 
-- shopify_order_number,
-- carrier,
-- service,
-- ship_date,
-- shipping_cost,
-- ship_to_country,
-- ship_to_city,
-- ship_to_state,
-- weight_oz,
-- weight_lbs,
-- total_quantity,
-- total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:03:07,641: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:03:07,642: 11:03:07 | 1 of 3 ERROR creating table model dbt_arecalde.shipments ............ [ERROR in 0.44s]
2017-03-16 11:03:07,642: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2b8704da-1b7b-48f3-b40e-c5173328cbc7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ad4c50>]}
2017-03-16 11:03:07,765: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:03:07,766: 11:03:07 | 2 of 3 SKIP relation dbt_arecalde.shopify_aggregate.................. [SKIP]
2017-03-16 11:03:07,766: 11:03:07 | 3 of 3 SKIP relation dbt_arecalde.shipments_items.................... [SKIP]
2017-03-16 11:03:07,858: 
2017-03-16 11:03:07,858: 11:03:07 | Finished running 3 models
2017-03-16 11:03:07,859: Done. PASS=0 ERROR=1 SKIP=2 TOTAL=3
2017-03-16 11:03:07,859: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111a718d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111a717b8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ad4dd8>]}
2017-03-16 11:03:07,980: Flushing usage events
2017-03-16 11:03:27,636: Tracking: tracking
2017-03-16 11:03:27,637: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105722c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105722780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105722da0>]}
2017-03-16 11:03:27,923: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:03:27,923: Loading dependency graph file
2017-03-16 11:03:27,975: Connecting to redshift.
2017-03-16 11:03:28,101: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:03:28,161: SQL status: CREATE SCHEMA in 0.06 seconds
2017-03-16 11:03:28,161: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:03:28,265: SQL status: SELECT in 0.10 seconds
2017-03-16 11:03:28,266: Concurrency: 1 threads (target='dev')
2017-03-16 11:03:28,266: Running!
2017-03-16 11:03:28,267: 
2017-03-16 11:03:28,267: 11:03:28 | Running 3 models
2017-03-16 11:03:31,301: 11:03:31 | 1 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:03:31,302: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:03:31,303: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
-- shipment_id,
-- order_number, 
-- shopify_order_number,
-- carrier,
-- service,
-- ship_date,
-- shipping_cost,
-- ship_to_country,
-- ship_to_city,
-- ship_to_state,
-- weight_oz,
-- weight_lbs,
-- total_quantity,
-- total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id::bigint, 
-- shipment_id,
-- s.order_number, 
-- shopify_order_number,
-- carrier,
-- service,
-- ship_date,
-- shipping_cost,
-- ship_to_country,
-- ship_to_city,
-- ship_to_state,
-- weight_oz,
-- weight_lbs,
-- total_quantity,
-- total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:03:44,587: Tracking: tracking
2017-03-16 11:03:44,588: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dcebc50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dceb780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dcebda0>]}
2017-03-16 11:03:45,518: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:03:45,518: Loading dependency graph file
2017-03-16 11:03:45,550: Connecting to redshift.
2017-03-16 11:03:45,862: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:03:45,911: SQL status: CREATE SCHEMA in 0.05 seconds
2017-03-16 11:03:45,911: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:03:46,029: SQL status: SELECT in 0.12 seconds
2017-03-16 11:03:46,030: Concurrency: 1 threads (target='dev')
2017-03-16 11:03:46,030: Running!
2017-03-16 11:03:46,031: 
2017-03-16 11:03:46,031: 11:03:46 | Running 3 models
2017-03-16 11:03:48,143: 11:03:48 | 1 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:03:48,143: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:03:48,145: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
shipment_id,
order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id::bigint, 
shipment_id,
s.order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:03:48,193: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:03:48,193: 11:03:48 | 1 of 3 ERROR creating table model dbt_arecalde.shipments ............ [ERROR in 0.05s]
2017-03-16 11:03:48,194: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'bbc1c8cb-5600-4554-a4f0-9e7ef0d1ffcd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de2cb00>]}
2017-03-16 11:03:48,308: Error executing target/build/shipstation/tables/shipments.sql
UNION types bigint and character varying cannot be matched
2017-03-16 11:03:48,308: 11:03:48 | 2 of 3 SKIP relation dbt_arecalde.shopify_aggregate.................. [SKIP]
2017-03-16 11:03:48,309: 11:03:48 | 3 of 3 SKIP relation dbt_arecalde.shipments_items.................... [SKIP]
2017-03-16 11:03:48,407: 
2017-03-16 11:03:48,407: 11:03:48 | Finished running 3 models
2017-03-16 11:03:48,408: Done. PASS=0 ERROR=1 SKIP=2 TOTAL=3
2017-03-16 11:03:48,408: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddc1710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddc1940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddc1780>]}
2017-03-16 11:03:48,644: Flushing usage events
2017-03-16 11:04:01,056: Tracking: tracking
2017-03-16 11:04:01,056: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a662c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a6629e8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a662d68>]}
2017-03-16 11:04:01,467: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:04:01,467: Loading dependency graph file
2017-03-16 11:04:01,500: Connecting to redshift.
2017-03-16 11:04:01,701: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:04:01,761: SQL status: CREATE SCHEMA in 0.06 seconds
2017-03-16 11:04:01,762: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:04:01,850: SQL status: SELECT in 0.09 seconds
2017-03-16 11:04:01,851: Concurrency: 1 threads (target='dev')
2017-03-16 11:04:01,852: Running!
2017-03-16 11:04:01,853: 
2017-03-16 11:04:01,853: 11:04:01 | Running 3 models
2017-03-16 11:04:02,346: 11:04:02 | 1 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:04:02,347: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:04:02,348: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
shipment_id,
order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id::bigint, 
shipment_id::bigint,
s.order_number, 
shopify_order_number,
carrier,
service,
ship_date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:04:02,484: Error executing target/build/shipstation/tables/shipments.sql
UNION types character varying and date cannot be matched
2017-03-16 11:04:02,485: 11:04:02 | 1 of 3 ERROR creating table model dbt_arecalde.shipments ............ [ERROR in 0.14s]
2017-03-16 11:04:02,485: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5c028045-b114-4c1f-8d24-27a9e00fe531', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a798cc0>]}
2017-03-16 11:04:02,750: Error executing target/build/shipstation/tables/shipments.sql
UNION types character varying and date cannot be matched
2017-03-16 11:04:02,751: 11:04:02 | 2 of 3 SKIP relation dbt_arecalde.shipments_items.................... [SKIP]
2017-03-16 11:04:02,751: 11:04:02 | 3 of 3 SKIP relation dbt_arecalde.shopify_aggregate.................. [SKIP]
2017-03-16 11:04:02,781: 
2017-03-16 11:04:02,781: 11:04:02 | Finished running 3 models
2017-03-16 11:04:02,781: Done. PASS=0 ERROR=1 SKIP=2 TOTAL=3
2017-03-16 11:04:02,782: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a738710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a738940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a738780>]}
2017-03-16 11:04:03,048: Flushing usage events
2017-03-16 11:06:46,228: Tracking: tracking
2017-03-16 11:06:46,228: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106da1c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106da1780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106da1da0>]}
2017-03-16 11:06:47,137: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:06:47,137: Loading dependency graph file
2017-03-16 11:06:47,181: Connecting to redshift.
2017-03-16 11:06:47,841: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:06:47,889: SQL status: CREATE SCHEMA in 0.05 seconds
2017-03-16 11:06:47,889: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:06:48,018: SQL status: SELECT in 0.13 seconds
2017-03-16 11:06:48,019: Concurrency: 1 threads (target='dev')
2017-03-16 11:06:48,019: Running!
2017-03-16 11:06:48,020: 
2017-03-16 11:06:48,021: 11:06:48 | Running 3 models
2017-03-16 11:06:51,901: 11:06:51 | 1 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:06:51,901: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:06:51,902: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
shipment_id,
order_number, 
shopify_order_number,
carrier,
service,
ship_date::date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id::bigint, 
shipment_id::bigint,
s.order_number, 
shopify_order_number,
carrier,
service,
ship_date::date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:06:51,985: Error executing target/build/shipstation/tables/shipments.sql
UNION types numeric and character varying cannot be matched
2017-03-16 11:06:51,986: 11:06:51 | 1 of 3 ERROR creating table model dbt_arecalde.shipments ............ [ERROR in 0.08s]
2017-03-16 11:06:51,986: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'aa9eb8b9-92fb-41b4-94c1-3b611f9936ed', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106ee3940>]}
2017-03-16 11:06:52,189: Error executing target/build/shipstation/tables/shipments.sql
UNION types numeric and character varying cannot be matched
2017-03-16 11:06:52,189: 11:06:52 | 2 of 3 SKIP relation dbt_arecalde.shopify_aggregate.................. [SKIP]
2017-03-16 11:06:52,189: 11:06:52 | 3 of 3 SKIP relation dbt_arecalde.shipments_items.................... [SKIP]
2017-03-16 11:06:52,243: 
2017-03-16 11:06:52,243: 11:06:52 | Finished running 3 models
2017-03-16 11:06:52,244: Done. PASS=0 ERROR=1 SKIP=2 TOTAL=3
2017-03-16 11:06:52,244: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106da1a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106ebdef0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106ebdf60>]}
2017-03-16 11:06:52,489: Flushing usage events
2017-03-16 11:07:18,159: Tracking: tracking
2017-03-16 11:07:18,159: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104ae1c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104ae1780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104ae1da0>]}
2017-03-16 11:07:19,003: Compiled 3 models, 0 data tests, 0 schema tests, 0 archives, 0 analyses
2017-03-16 11:07:19,004: Loading dependency graph file
2017-03-16 11:07:19,038: Connecting to redshift.
2017-03-16 11:07:19,278: SQL: create schema if not exists "dbt_arecalde"
2017-03-16 11:07:19,334: SQL status: CREATE SCHEMA in 0.06 seconds
2017-03-16 11:07:19,334: SQL: select tablename as name, 'table' as type from pg_tables
        where schemaname = 'dbt_arecalde'
        union all
        select viewname as name, 'view' as type from pg_views
        where schemaname = 'dbt_arecalde'
2017-03-16 11:07:19,719: SQL status: SELECT in 0.39 seconds
2017-03-16 11:07:19,720: Concurrency: 1 threads (target='dev')
2017-03-16 11:07:19,720: Running!
2017-03-16 11:07:19,722: 
2017-03-16 11:07:19,722: 11:07:19 | Running 3 models
2017-03-16 11:07:20,232: 11:07:20 | 1 of 3 START table model dbt_arecalde.shipments ..................... [RUN]
2017-03-16 11:07:20,232: executing model <CompiledModel shipstation.shipments: target/build/shipstation/tables/shipments.sql>
2017-03-16 11:07:20,233: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments as (
select 
orderid as order_id, 
shipmentid as shipment_id,
ordernumber as order_number, 
'1' || split_part(ordernumber, '-',1) as shopify_order_number,
carriercode as carrier,
servicecode as service,
shipdate as ship_date,
shipmentcost as shipping_cost,
shipto__country as ship_to_country,
shipto__city as ship_to_city,
shipto__state as ship_to_state,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments
),  __dbt__CTE__file_shipments as (
select 
NULL as order_id, 
NULL as shipment_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
ship_to_country as ship_to_country,
NULL as ship_to_city,
ship_to_state as ship_to_state,
NULL as weight_oz,
NULL as weight_lbs,
max(carrier) as carrier,
max(service) as service,
max(ship_date) as ship_date,
sum(shipping_cost) as shipping_cost
from file_uploads.shipstation_shipments
group by 1,2,3,4,5,6,7,8,9
),  __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__webhook_shipments_aggregates as (
select order_id,
sum(quantity) as total_quantity,
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__webhook_shipments_items
group by 1
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
),  __dbt__CTE__file_shipments_aggregates as (
select order_number, 
sum(quantity) as total_quantity, 
sum(weight_oz) as total_weight_oz, 
sum(weight_lbs) as total_weight_lbs
from __dbt__CTE__file_shipments_items
group by 1
)select 
s.order_id, 
shipment_id,
order_number, 
shopify_order_number,
carrier,
service,
ship_date::date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz,
weight_lbs,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__webhook_shipments s
join __dbt__CTE__webhook_shipments_aggregates sa on sa.order_id = s.order_id

UNION

select 
order_id::bigint, 
shipment_id::bigint,
s.order_number, 
shopify_order_number,
carrier,
service,
ship_date::date,
shipping_cost,
ship_to_country,
ship_to_city,
ship_to_state,
weight_oz::numeric,
weight_lbs::numeric,
total_quantity,
total_weight_oz, 
total_weight_lbs
from __dbt__CTE__file_shipments s
join __dbt__CTE__file_shipments_aggregates sa on sa.order_number = s.order_number
where s.order_number not in (select order_number from __dbt__CTE__webhook_shipments)
);

-- Post-model hooks

2017-03-16 11:09:05,291: SQL status: SELECT in 105.06 seconds
2017-03-16 11:09:06,416: SQL: alter table "dbt_arecalde"."shipments__dbt_tmp" rename to "shipments"
2017-03-16 11:09:06,611: SQL status: ALTER TABLE in 0.19 seconds
2017-03-16 11:09:07,236: 11:09:07 | 1 of 3 OK created table model dbt_arecalde.shipments ................ [SELECT in 107.00s]
2017-03-16 11:09:07,237: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e2126c5-d70b-44f2-ad02-14a197e60d8f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104c197b8>]}
2017-03-16 11:09:12,000: 11:09:12 | 2 of 3 START table model dbt_arecalde.shopify_aggregate ............. [RUN]
2017-03-16 11:09:12,001: executing model <CompiledModel shipstation.shopify_aggregate: target/build/shipstation/tables/shopify_aggregate.sql>
2017-03-16 11:09:12,001: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shopify_aggregate__dbt_tmp"   as (
    select
shopify_order_number,
sum(shipping_cost) as shipping_cost,
sum(total_weight_lbs) as total_weight_lbs
from "dbt_arecalde"."shipments"
group by 1
);

-- Post-model hooks

2017-03-16 11:09:18,911: SQL status: SELECT in 6.91 seconds
2017-03-16 11:09:19,600: SQL: alter table "dbt_arecalde"."shopify_aggregate__dbt_tmp" rename to "shopify_aggregate"
2017-03-16 11:09:19,747: SQL status: ALTER TABLE in 0.15 seconds
2017-03-16 11:09:20,296: 11:09:20 | 2 of 3 OK created table model dbt_arecalde.shopify_aggregate ........ [SELECT in 8.29s]
2017-03-16 11:09:20,296: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e2126c5-d70b-44f2-ad02-14a197e60d8f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104c19940>]}
2017-03-16 11:09:20,393: 11:09:20 | 3 of 3 START table model dbt_arecalde.shipments_items ............... [RUN]
2017-03-16 11:09:20,393: executing model <CompiledModel shipstation.shipments_items: target/build/shipstation/tables/shipments_items.sql>
2017-03-16 11:09:20,394: SQL: 
-- Compiled by DBT


-- Pre-model hooks


-- Model SQL

create table "dbt_arecalde"."shipments_items__dbt_tmp"   as (
    with __dbt__CTE__webhook_shipments_items as (
select 
_sdc_source_key_orderid as order_id, 
lineitemkey as shopify_line_item_id,
upper(sku) as sku, 
quantity,
weight__value as weight_oz,
round(weight__value::decimal(16,2) / 16,1) as weight_lbs
from shipstation.webhook_shipments__shipmentitems
),  __dbt__CTE__file_shipments_items as (
select 
NULL as order_id, 
NULL as shopify_line_item_id,
order_number, 
'1' || split_part(order_number, '-',1) as shopify_order_number,
upper(sku) as sku, 
quantity,
weight as weight_oz,
round(weight::decimal(16,2) / 16,1) as weight_lbs
from file_uploads.shipstation_shipments__items
)select 
si.order_id, 
si.shopify_line_item_id,
s.order_number, 
s.shopify_order_number,
sku, 
quantity,
si.weight_oz,
si.weight_lbs,
(shipping_cost / total_quantity) * quantity as line_item_shipping_cost
from __dbt__CTE__webhook_shipments_items si
join "dbt_arecalde"."shipments" s on s.order_id = si.order_id

UNION

select 
si.order_id, 
si.shopify_line_item_id,
si.order_number, 
si.shopify_order_number,
sku, 
quantity,
si.weight_oz,
si.weight_lbs,
(shipping_cost / total_quantity) * quantity as line_item_shipping_cost
from __dbt__CTE__file_shipments_items si
join "dbt_arecalde"."shipments" s on s.order_number = si.order_number
);

-- Post-model hooks

2017-03-16 11:09:34,779: SQL status: SELECT in 14.38 seconds
2017-03-16 11:09:35,723: SQL: alter table "dbt_arecalde"."shipments_items__dbt_tmp" rename to "shipments_items"
2017-03-16 11:09:35,781: SQL status: ALTER TABLE in 0.06 seconds
2017-03-16 11:09:36,422: 11:09:36 | 3 of 3 OK created table model dbt_arecalde.shipments_items .......... [SELECT in 16.03s]
2017-03-16 11:09:36,422: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e2126c5-d70b-44f2-ad02-14a197e60d8f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104c19be0>]}
2017-03-16 11:09:37,713: 
2017-03-16 11:09:37,713: 11:09:37 | Finished running 3 models
2017-03-16 11:09:37,714: Done. PASS=3 ERROR=0 SKIP=0 TOTAL=3
2017-03-16 11:09:37,714: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bfbf98>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bfbef0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bfbfd0>]}
2017-03-16 11:09:37,944: Flushing usage events
